<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
	version="2.1">

	<!-- 
		1. persistence-unit 定义持久化单元。
		2. name 为持久化单元的名字，用于在代码中定位该单元。
		3. transaction-type 用于指定该持久化单元使用的事务（JTA or 标准的本地事务）
		-->
	<persistence-unit name="EntityMappings" transaction-type="RESOURCE_LOCAL">
		
		<!-- 指定实现 javax.persistance.spi.PersistenceProvider 接口的类的完全限定名，这里使用 Hibernate 实现 -->
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		
		<!-- 指定数据源 -->
		<non-jta-data-source>
            java:comp/env/jdbc/EntityMappings
    </non-jta-data-source>
    
    <!-- 
    	1. 在 persistence.xml 文件所在类路径上搜索标注了 JPA 注解的类。
    	2. 例如本文件在 META-INF/ 中，构建之后将打包至 WEB-INF/classes 中，则 classes 目录将被搜索 -->
		<exclude-unlisted-classes>false</exclude-unlisted-classes>
		
		<!-- 如何在持久化单元中缓存实体，ENABLE_SELECTIVE 表示只缓存标注了 @Cacheable 注解的实体 -->
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
		
		<!-- 关闭实体上的 Bean 验证 -->
		<validation-mode>NONE</validation-mode>
		
		<!-- 禁用模式生成 -->
		<properties>
			<property name="javax.persistence.schema-generation.database.action" value="none" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
		</properties>
	</persistence-unit>

</persistence>